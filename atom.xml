<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>EduanTech</title>
	<subtitle>A web developer and software engineer that loves free software (as in freedom).</subtitle>
	<link href="http://greduan.github.io/atom.xml" rel="self" />
	<link href="http://greduan.github.io" />
	<updated>2013-11-14T17:46:17.051Z</updated>
	<id>http://greduan.github.io</id>
	<author>
		<name>Eduán Lávaque</name>
		<email>eduanlavaque@gmail.com</email>
	</author>

	
		<entry>
			<title>Switching From zsh to fish</title>
			<link href="http://greduan.github.io/posts/switching-from-zsh-to-fish.html"/>
			<updated>2013-11-13T00:00:00.000Z</updated>
			<id>http://greduan.github.io/posts/switching-from-zsh-to-fish.html</id>
			<content type="html">&lt;p&gt;In this post I&amp;#39;ll be talking about my experience with switching from zsh (&lt;strong&gt;Z&lt;/strong&gt; &lt;strong&gt;sh&lt;/strong&gt;ell) to fish (&lt;strong&gt;F&lt;/strong&gt;riendly &lt;strong&gt;I&lt;/strong&gt;nteractive &lt;strong&gt;sh&lt;/strong&gt;ell). I&amp;#39;m not gonna talk about how or why it&amp;#39;s better than the other shells, I&amp;#39;m only gonna talk about the process of switching.&lt;/p&gt;
&lt;p&gt;Where to start... well, how about starting with the fact that I tried to do the switch before? I did try to do the switch before, I don&amp;#39;t remember exactly what problems I had last time but I&amp;#39;m pretty sure it was something with Vim or something.&lt;/p&gt;
&lt;p&gt;I decided to try the switch again taking advantage of the fact that a new version had been released recently (&lt;a href=&quot;http://fishshell.com/release_notes.html&quot;&gt;v2.1.0&lt;/a&gt;). Seemed like a good idea to try again, also the fact that I like the features it has, of course.&lt;/p&gt;
&lt;p&gt;The switch wasn&amp;#39;t as problem-free as I wished but it was quite a smooth process.&lt;/p&gt;
&lt;p&gt;First, I was running across problems with Vim which I imagine I wasn&amp;#39;t able to solve last time, but I solved this time. The problem was a startup error that Vim was complaining about not finding a certain file or something. I just had to add the following to the top of my &lt;code&gt;.vimrc&lt;/code&gt; file to fix it:&lt;/p&gt;
&lt;pre class=&quot;highlighted&quot;&gt;&lt;code class=&quot;no-highlight&quot;&gt;if $SHELL =~ &amp;#39;fish&amp;#39;
    set shell=/bin/sh
endif&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Basically, if Vim can detect the &lt;code&gt;$SHELL&lt;/code&gt; variable is &lt;code&gt;fish&lt;/code&gt; it&amp;#39;ll tell Vim to interact with the current shell as if it was &lt;code&gt;sh&lt;/code&gt;. As I understand it, don&amp;#39;t take my word for it, please. That fixed that.&lt;/p&gt;
&lt;p&gt;Another problem I was running into was that Emacs was complaining about not being able to find the &lt;code&gt;package.el&lt;/code&gt; file. The reason for the error was that I was opening an old version of Emacs (v22.x). This was just a matter of updating the &lt;code&gt;$PATH&lt;/code&gt; variable, that was done with the following line of code in my &lt;code&gt;config.fish&lt;/code&gt; file:&lt;/p&gt;
&lt;pre class=&quot;highlighted&quot;&gt;&lt;code class=&quot;no-highlight&quot;&gt;set PATH /usr/local/bin /usr/local/sbin /usr/local/share/npm/bin /usr/local/opt/ruby/bin $HOME/bin $HOME/.tmuxifier/tmuxifier/bin $PATH&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Umm... Those were the only real note-worthy parts. The rest were just a matter of translating zsh to fish. You can find the latest version of my config files here: &lt;a href=&quot;https://github.com/Greduan/dotfiles/tree/master/config/fish&quot;&gt;https://github.com/Greduan/dotfiles/tree/master/config/fish&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If there&amp;#39;s something you think could be said better or is plain wrong in this post feel free to &lt;a href=&quot;https://github.com/Greduan/eduantech.docpad/blob/master/src/render/posts/switching-from-zsh-to-fish.html.md&quot;&gt;modify it&lt;/a&gt; and make a pull request for it!&lt;/p&gt;
&lt;p&gt;Thank you for reading! You can share your thoughts with me through email at &lt;a href=&quot;&amp;#109;&amp;#x61;&amp;#x69;&amp;#x6c;&amp;#116;&amp;#x6f;&amp;#58;&amp;#101;&amp;#100;&amp;#117;&amp;#97;&amp;#110;&amp;#108;&amp;#97;&amp;#x76;&amp;#x61;&amp;#x71;&amp;#117;&amp;#101;&amp;#64;&amp;#103;&amp;#109;&amp;#x61;&amp;#x69;&amp;#x6c;&amp;#46;&amp;#x63;&amp;#111;&amp;#x6d;&quot;&gt;&amp;#101;&amp;#100;&amp;#117;&amp;#97;&amp;#110;&amp;#108;&amp;#97;&amp;#x76;&amp;#x61;&amp;#x71;&amp;#117;&amp;#101;&amp;#64;&amp;#103;&amp;#109;&amp;#x61;&amp;#x69;&amp;#x6c;&amp;#46;&amp;#x63;&amp;#111;&amp;#x6d;&lt;/a&gt;. :)&lt;/p&gt;
<hr/><p>The post <a href="http://greduan.github.io/posts/switching-from-zsh-to-fish.html">Switching From zsh to fish</a> appeard first on <a href="http://greduan.github.io">EduanTech</a></p></content>
		</entry>
	
		<entry>
			<title>Light Table, The New Emacs</title>
			<link href="http://greduan.github.io/posts/light-table-the-new-emacs.html"/>
			<updated>2013-11-07T00:00:00.000Z</updated>
			<id>http://greduan.github.io/posts/light-table-the-new-emacs.html</id>
			<content type="html">&lt;p&gt;The title may be misleading so I&amp;#39;m gonna make it clear right now. I couldn&amp;#39;t come up with anything better. It&amp;#39;s gonna stay like that, so you can make suggestions for a better title but I won&amp;#39;t change the title.&lt;/p&gt;
&lt;p&gt;So let me explain why I chose this title. That&amp;#39;s what this post is about.&lt;/p&gt;
&lt;p&gt;There is a popular saying that Vim users love to use against Emacs users in the holy editor wars. That saying is &amp;quot;Emacs would make a great OS, if only it had a good text editor.&amp;quot; or something along those lines.&lt;/p&gt;
&lt;p&gt;And I can sort of agree with that. Emacs&amp;#39; editor is not superior to Vim&amp;#39;s in almost any front. But let&amp;#39;s look at the bright side of that saying.&lt;/p&gt;
&lt;p&gt;They&amp;#39;re criticizing the text editor. But they&amp;#39;re acknowledging it as an OS. In other words it apparently can be extended immensely. And it has proven to be able to do just that. It has just about anything that can be done in text. Email reader, news reader, chat, calendar, you name it. And if it isn&amp;#39;t already implemented, you can do it yourself! ;)&lt;/p&gt;
&lt;p&gt;And of course, it can be extended immensely towards developing. Debuggers, the CLI, automatic compiling functionality, people have made it an IDE as well. So its limits are practically none. Oh and let&amp;#39;s not forget about the language you use to customize it. Emacs Lisp, A.K.A. Elisp; Its own dialect of Lisp. You can&amp;#39;t get a lot more customizable than that.&lt;/p&gt;
&lt;p&gt;Except you can... Enter Light Table!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.lighttable.com/&quot;&gt;Light Table&lt;/a&gt; is one of the new kids on the block. It is coded in &lt;a href=&quot;http://clojure.org/clojurescript&quot;&gt;ClojureScript&lt;/a&gt;, a Lisp dialect that essentially compiles to JS. The other new kid is &lt;a href=&quot;https://github.com/limetext/lime&quot;&gt;Lime&lt;/a&gt;, but he still hasn&amp;#39;t got a working frontend (at the time of writing).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.chris-granger.com/&quot;&gt;Chris Granger&lt;/a&gt; (the main dev of Light Table) has created a unique architecture with Light Table. (As I understand it) you can add or remove anything and everything. Well maybe not everything since you&amp;#39;ll always want some stuff there but you know what I mean. Think about the ECS (&lt;a href=&quot;http://en.wikipedia.org/wiki/Entity_component_system&quot;&gt;Entity Component System&lt;/a&gt;), that&amp;#39;s almost &lt;em&gt;exactly&lt;/em&gt; what Light Table has as an architecture. It is the first text editor of its kind in this sense.&lt;/p&gt;
&lt;p&gt;He has created a very interesting system with Light Table where the basic text editor is loaded by default. All of the text editor you get by default are just behaviours. These behaviours can be added, removed, disabled, enabled. I&amp;#39;m sure you get where I&amp;#39;m going with this.&lt;/p&gt;
&lt;p&gt;It could be anything and everything with due time! It could be the first real competitor for Emacs as well in terms of customizability. Think about it, it&amp;#39;s written in ClojureScript, a Lisp dialect, you can add or remove behaviours, to the point where you can make it a NotePad or a browser if you liked.&lt;/p&gt;
&lt;p&gt;One thing to note is that it is using &lt;a href=&quot;https://github.com/rogerwang/node-webkit&quot;&gt;node-webkit&lt;/a&gt; as it&amp;#39;s platform. It allows you to call Node.js from the DOM. That&amp;#39;s right, Light Table the text editor with almost no limits is technically a web browser.&lt;/p&gt;
&lt;p&gt;That means JS is its limit. If you can&amp;#39;t do it with JS (and &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;) you can&amp;#39;t do it in Light Table. But if you can do it in JS you can do it in Light Table. JS is quickly becoming the one language to write. JS is found almost everywhere nowadays. So I think Chris has made a smart decision when he decided to write it in ClojureScript.&lt;/p&gt;
&lt;p&gt;The main point is, it&amp;#39;s got (almost) no limit on what can be added &lt;em&gt;and&lt;/em&gt; no limit on what can be removed, something Emacs is missing.&lt;/p&gt;
&lt;p&gt;Oh and one more thing. Emacs is millions of lines of Elisp plus the C code it uses. Light Table is only around twelve thousand lines of ClojureScript, at the time of writing (v0.5.18).&lt;/p&gt;
&lt;p&gt;So yeah. My point is, it&amp;#39;ll possibly be &lt;em&gt;the&lt;/em&gt; text editor once a couple of years pass after it&amp;#39;s full release and it is more mature.&lt;/p&gt;
&lt;p&gt;If there&amp;#39;s something you think could be said better in this post feel free to &lt;a href=&quot;https://github.com/Greduan/eduantech.docpad/blob/master/src/render/posts/light-table-the-new-emacs.html.md&quot;&gt;modify it&lt;/a&gt; and make a pull request for it!&lt;/p&gt;
&lt;p&gt;Thank you for reading! You can share your thoughts with me through email at &lt;a href=&quot;&amp;#x6d;&amp;#x61;&amp;#105;&amp;#x6c;&amp;#116;&amp;#111;&amp;#58;&amp;#101;&amp;#x64;&amp;#117;&amp;#x61;&amp;#x6e;&amp;#108;&amp;#97;&amp;#x76;&amp;#97;&amp;#113;&amp;#117;&amp;#x65;&amp;#64;&amp;#103;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#x6c;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&quot;&gt;&amp;#101;&amp;#x64;&amp;#117;&amp;#x61;&amp;#x6e;&amp;#108;&amp;#97;&amp;#x76;&amp;#97;&amp;#113;&amp;#117;&amp;#x65;&amp;#64;&amp;#103;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#x6c;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;. :)&lt;/p&gt;
<hr/><p>The post <a href="http://greduan.github.io/posts/light-table-the-new-emacs.html">Light Table, The New Emacs</a> appeard first on <a href="http://greduan.github.io">EduanTech</a></p></content>
		</entry>
	
		<entry>
			<title>Open Source Games Without Going Poor</title>
			<link href="http://greduan.github.io/posts/open-source-games-without-going-poor.html"/>
			<updated>2013-10-23T00:00:00.000Z</updated>
			<id>http://greduan.github.io/posts/open-source-games-without-going-poor.html</id>
			<content type="html">&lt;p&gt;&lt;strong&gt;TL;DR: Release your game for a fee, after a certain amount of time release source code, continue selling pre-compiled version to public. Open source games.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So what&amp;#39;s the idea? What do I mean with open source games?&lt;/p&gt;
&lt;p&gt;I love open source. I try to make everything I use open source whenever possible. There are lot of great projects I use and sometimes contribute to that are open source. For example Clojure, Vim, Chromium (all of which I use) or DocPad (to which I contribute).&lt;/p&gt;
&lt;p&gt;I also love games, I mean who doesn&amp;#39;t? Doesn&amp;#39;t have to be video games for it to be a game, there&amp;#39;s also physical games like Tag, Hide-and-Seek etc. They are all free, open source, they&amp;#39;re just an idea, you see kids modifying games in order to make them more interesting all the time! Most video games aren&amp;#39;t open source however. You pay for a game, you play it, finish it (or complete it), move on to the next game. The games that &lt;em&gt;are&lt;/em&gt; open source are so simple there isn&amp;#39;t any gain in making them not open source, if anything you lose from making them closed source.&lt;/p&gt;
&lt;p&gt;A lot of, if not all developers love open source. However, a lot of us developers make games for a living. We can&amp;#39;t make them open source, we would have to live off of donations, which are inconsistent if there are donations and if there aren&amp;#39;t well... we&amp;#39;re in deep shit if we don&amp;#39;t have a job.&lt;/p&gt;
&lt;p&gt;Now, this is an idea I had that tries to solve that. Us open source lovers who want to make a decent living off of making &lt;em&gt;open source&lt;/em&gt; games will be able to do this with this idea I had.&lt;/p&gt;
&lt;p&gt;The idea is simple, release the game to the public for a fee as usual, however after an agreed amount of time, which you decide, release the game&amp;#39;s source. Make it open source. However, continue selling the pre-compiled game to the public.&lt;/p&gt;
&lt;p&gt;So it&amp;#39;s really a simple idea. You release the game for a fee for a certain amount of time in order to make a living or at least make up for what you lost in the development process. After that certain amount of time is up you release the source.&lt;/p&gt;
&lt;p&gt;This makes the game open source however you are still making an income from non-techie users or just nice users.&lt;/p&gt;
&lt;p&gt;So why would this work? Smart users would just wait a year or whatever and compile the source and done, they won&amp;#39;t pay anything, why would they? They&amp;#39;re &lt;em&gt;smart&lt;/em&gt; about it. This idea is just a recipe for disaster!&lt;/p&gt;
&lt;p&gt;Well, the way I see it, if your game is good enough, people won&amp;#39;t care about paying for it. They won&amp;#39;t mind keeping you alive by giving you $5 or whatever your game costs. In fact they would be glad that you made that game. AND, as an added bonus, if they&amp;#39;re interested in the game&amp;#39;s source code to see how you figured out this holy-crap-that-looks-crazy thing in your game, they can do that.&lt;/p&gt;
&lt;p&gt;Most probably if the don&amp;#39;t pay for your game it&amp;#39;s because they want some sort of trial period or they can&amp;#39;t even afford the game anyway. So really you&amp;#39;re not losing much.&lt;/p&gt;
&lt;p&gt;Of course, there&amp;#39;ll be the users that just compile the game, play it, finish and complete it and uninstall it, never touching it again. How many users are like that? In my experience with people, not many.&lt;/p&gt;
&lt;p&gt;So this is a trust issue. Do you trust your users enough to be nice enough to let you live? Or not? I trust them, they&amp;#39;re playing my awesome game, why wouldn&amp;#39;t they want to keep me alive for me to make more games?&lt;/p&gt;
&lt;p&gt;You can look at it the other way, maybe people are interested in your game not for the game itself, but the code. They approach your game&amp;#39;s code because you figured something out that they&amp;#39;ve had a hard time figuring out. They figure out stuff for you that you did wrong and make pull requests.&lt;/p&gt;
&lt;p&gt;So you have an income one way or another. Be it through code or money. If they help with the code they help with the overall game so the sales would be better, for example.&lt;/p&gt;
&lt;p&gt;This is just a crazy but not impossible idea I had while thinking on my bed, so it&amp;#39;s not really fleshed out, since there isn&amp;#39;t anything to flesh out.&lt;/p&gt;
&lt;p&gt;Also it&amp;#39;s kinda hastily written, so if there&amp;#39;s something you think could be said better in this post feel free to &lt;a href=&quot;https://github.com/Greduan/eduantech.docpad/blob/master/src/render/posts/open-source-games-without-going-poor.html.md&quot;&gt;modify it&lt;/a&gt; and make a pull request for it!&lt;/p&gt;
&lt;p&gt;Here is some further reading you might be interested in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://raamdev.com/income-ethics-series/&quot;&gt;Income Ethics - Raam Dev&lt;/a&gt; - A very deep look into a similar subject, he mentions something extremly similar to this idea in &lt;a href=&quot;http://raamdev.com/income-ethics-series/#public_domain&quot;&gt;this section&lt;/a&gt; of his post.&lt;/li&gt;
&lt;/ul&gt;
<hr/><p>The post <a href="http://greduan.github.io/posts/open-source-games-without-going-poor.html">Open Source Games Without Going Poor</a> appeard first on <a href="http://greduan.github.io">EduanTech</a></p></content>
		</entry>
	
		<entry>
			<title>The Switch to DocPad</title>
			<link href="http://greduan.github.io/posts/the-switch-to-docpad.html"/>
			<updated>2013-06-16T00:00:00.000Z</updated>
			<id>http://greduan.github.io/posts/the-switch-to-docpad.html</id>
			<content type="html">&lt;p&gt;Well I finally switched to something else than WordPress.&lt;/p&gt;
&lt;p&gt;I switched to &lt;a href=&quot;http://docpad.org&quot;&gt;DocPad&lt;/a&gt;, the &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; based static website generator. It&amp;#39;s a static website generator but if you wish it can be completely dynamic.&lt;/p&gt;
&lt;p&gt;I am using Markdown to write my posts. Using &lt;a href=&quot;http://coffeekup.org/&quot;&gt;CoffeeKup&lt;/a&gt; and &lt;a href=&quot;https://github.com/sstephenson/eco&quot;&gt;Eco&lt;/a&gt; as templating languages and normal JavaScript for the &lt;code&gt;.js&lt;/code&gt; files. And I am using &lt;a href=&quot;http://sass-lang.com/&quot;&gt;SCSS&lt;/a&gt; for the CSS, of course.&lt;/p&gt;
&lt;p&gt;Also, now my website is being hosted by GitHub Pages, so that&amp;#39;s cool.&lt;/p&gt;
&lt;p&gt;That is all. Hope you like the changes. :)&lt;/p&gt;
<hr/><p>The post <a href="http://greduan.github.io/posts/the-switch-to-docpad.html">The Switch to DocPad</a> appeard first on <a href="http://greduan.github.io">EduanTech</a></p></content>
		</entry>
	
</feed>
